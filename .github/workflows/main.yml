name: Check and Download New Release

on:
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次
  workflow_dispatch:     # 允许手动触发

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          lfs: true
          fetch-depth: 0  # 获取完整历史记录

      - name: Clean git history but keep files
        run: |
          # 备份当前文件（排除.git目录）
          echo "备份当前文件..."
          mkdir -p /tmp/repo_backup
          rsync -av --exclude='.git' --exclude='.gitattributes' . /tmp/repo_backup/
          
          # 保存当前的.gitattributes文件（包含LFS配置）
          if [ -f .gitattributes ]; then
            cp .gitattributes /tmp/repo_backup/
          fi
          
          # 删除.git目录并重新初始化
          rm -rf .git
          git init
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # 恢复.gitattributes文件
          if [ -f /tmp/repo_backup/.gitattributes ]; then
            cp /tmp/repo_backup/.gitattributes .
          fi
          
          # 配置LFS
          git config --global lfs.https://github.com/${{ github.repository }}.git/info/lfs.locksverify false
          git lfs install --local
          
          # 添加远程仓库（先检查是否已存在）
          git remote remove origin 2>/dev/null || true
          git remote add origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # 恢复所有文件
          echo "恢复文件..."
          rsync -av --exclude='.git' /tmp/repo_backup/ .
          
          # 清理备份
          rm -rf /tmp/repo_backup
          
          # 添加所有文件到新仓库
          git add --all
          
          # 如果有更改，提交初始提交
          if ! git diff --cached --quiet; then
            git commit -m "初始提交 - 清理历史记录"
          fi

      - name: Setup Git and LFS
        run: |
          # 配置Git用户信息
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # 配置LFS（禁用锁定API以避免错误）
          git config --global lfs.https://github.com/${{ github.repository }}.git/info/lfs.locksverify false
          
          # 安装并初始化Git LFS
          git lfs install --local
          git lfs pull

      - name: Ensure LFS tracking
        run: |
          # 确保APK文件被LFS跟踪
          if ! git lfs ls-files | grep -q "web/apk_files/.*\.apk"; then
            echo "Configuring LFS tracking for APK files..."
            git lfs track "web/apk_files/*.apk"
            git add .gitattributes
            git commit -m "Update LFS tracking for APK files" || echo "No changes to commit"
          fi

      - name: Check latest release
        id: check_release
        run: |
          # 获取FCL项目的最新发行版信息
          curl -s https://api.github.com/repos/FCL-Team/FoldCraftLauncher/releases/latest > latest_release.json
          LATEST_TAG=$(jq -r '.tag_name' latest_release.json)
          
          # 获取当前仓库中的最新已知版本
          if [ -f .latest_version ]; then
            CURRENT_VERSION=$(cat .latest_version)
          else
            CURRENT_VERSION="v0.0.0"
          fi
          
          echo "Latest version: $LATEST_TAG"
          echo "Current version: $CURRENT_VERSION"
          
          # 比较版本
          if [ "$LATEST_TAG" != "$CURRENT_VERSION" ]; then
            echo "NEW_RELEASE=true" >> $GITHUB_ENV
            echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          else
            echo "NEW_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Clean old APK files
        if: env.NEW_RELEASE == 'true'
        run: |
          # 删除现有的web/apk_files目录中的所有文件
          if [ -d "web/apk_files" ]; then
            echo "Cleaning old APK files..."
            rm -rf web/apk_files/*
          else
            mkdir -p web/apk_files
          fi

      - name: Download and process new release
        if: env.NEW_RELEASE == 'true'
        run: |
          # 创建临时目录下载文件
          mkdir -p temp_download
          cd temp_download
          
          # 获取发行版的资产下载URL
          jq -r '.assets[].browser_download_url' ../latest_release.json | while read url; do
            if [ ! -z "$url" ]; then
              echo "Downloading $url"
              curl -L -O "$url"
            fi
          done
          
          cd ..
          rm latest_release.json
          
          # 确保目标目录存在且为空
          mkdir -p web/apk_files
          
          # 移动所有.apk文件到目标目录
          find temp_download -name "*.apk" -exec mv {} web/apk_files/ \;
          
          # 删除临时目录
          rm -rf temp_download

      - name: Filter APK files (keep only 'all' versions)
        if: env.NEW_RELEASE == 'true'
        run: |
          echo "Filtering APK files, keeping only 'all' versions..."
          
          # 遍历web/apk_files目录中的所有文件
          for file in web/apk_files/*.apk; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              # 如果文件名不包含"all"，则删除该文件
              if [[ ! "$filename" == *"all"* ]]; then
                echo "Removing non-all version: $filename"
                rm "$file"
              else
                echo "Keeping all version: $filename"
              fi
            fi
          done
          
          # 检查是否还有文件剩余
          remaining_files=$(find web/apk_files -name "*.apk" | wc -l)
          echo "Remaining APK files: $remaining_files"
          
          if [ "$remaining_files" -eq 0 ]; then
            echo "Warning: No 'all' version APK files found!"
          fi

      - name: Add filtered files to git
        if: env.NEW_RELEASE == 'true'
        run: |
          # 确保LFS跟踪APK文件
          git lfs track "web/apk_files/*.apk"
          git add .gitattributes
          
          # 强制添加所有APK文件（包括删除的文件）
          git add --all web/apk_files/
          
          # 更新版本记录文件
          echo "$LATEST_TAG" > .latest_version
          git add .latest_version

      - name: Generate download page
        if: env.NEW_RELEASE == 'true'
        run: |
          # 创建web目录（如果不存在）
          mkdir -p web
          
          # 读取最新版本号
          LATEST_VERSION=$(cat .latest_version)
          
          # 获取APK文件列表（现在只包含all版本）
          APK_FILES=$(find web/apk_files -name "*.apk" -type f | sort)
          
          # 生成HTML下载页面到web目录
          cat > web/index.html << EOF
          <!DOCTYPE html>
          <html lang="zh-CN">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>FCL启动器下载站</title>
              <style>
                  body {
                      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                      max-width: 1000px;
                      margin: 0 auto;
                      padding: 20px;
                      background-color: #f5f5f5;
                  }
                  .header {
                      text-align: center;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      padding: 30px;
                      border-radius: 10px;
                      margin-bottom: 30px;
                  }
                  .version-info {
                      background-color: white;
                      padding: 20px;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                      margin-bottom: 20px;
                      text-align: center;
                  }
                  .download-list {
                      background-color: white;
                      padding: 20px;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  .file-item {
                      display: flex;
                      justify-content: space-between;
                      align-items: center;
                      padding: 15px;
                      border-bottom: 1px solid #eee;
                  }
                  .file-item:last-child {
                      border-bottom: none;
                  }
                  .file-name {
                      font-weight: 500;
                      color: #333;
                      flex: 1;
                  }
                  .download-btn {
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      color: white;
                      padding: 8px 16px;
                      text-decoration: none;
                      border-radius: 5px;
                      transition: transform 0.2s;
                  }
                  .download-btn:hover {
                      transform: translateY(-2px);
                      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
                  }
                  .footer {
                      text-align: center;
                      margin-top: 30px;
                      color: #666;
                      font-size: 14px;
                  }
                  .note {
                      background-color: #fff3cd;
                      border: 1px solid #ffeaa7;
                      border-radius: 5px;
                      padding: 15px;
                      margin-bottom: 20px;
                      color: #856404;
                  }
                  .download-tip {
                      background-color: #e3f2fd;
                      border: 1px solid #bbdefb;
                      border-radius: 5px;
                      padding: 15px;
                      margin-bottom: 20px;
                      color: #1565c0;
                  }
                  .recommendation {
                      background-color: #e8f5e9;
                      border: 1px solid #c8e6c9;
                      border-radius: 5px;
                      padding: 15px;
                      margin-bottom: 20px;
                  }
                  .recommendation h4 {
                      margin-top: 0;
                      color: #2e7d32;
                  }
                  @media (max-width: 600px) {
                      .file-item {
                          flex-direction: column;
                          align-items: flex-start;
                      }
                      .download-btn {
                          margin-top: 10px;
                          align-self: flex-end;
                      }
                  }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>🚀 FCL启动器下载站</h1>
                  <p>Fold Craft Launcher - 稳定版本下载</p>
              </div>
              
              <div class="version-info">
                  <h2>最新版本: <span style="color: #667eea;">$LATEST_VERSION</span></h2>
                  <p>通用版本 (all) - 包含所有架构，推荐下载</p>
              </div>
              
              <div class="note">
                  <strong>📝 说明：</strong> 本站只提供通用版本 (all)，该版本包含所有CPU架构，兼容性最好。
              </div>
              
              <div class="download-tip">
                  <strong>⚡ 下载提示：</strong> 如需更快的下载速度，建议使用多线程下载工具如 IDM、FDM 或 Aria2 等。
              </div>
              
              <div class="recommendation">
                  <h4>📲 多线程下载工具推荐</h4>
                  <p>如果您在手机上需要更快的下载速度，可以下载这款完全免费的多线程下载器：</p>
                  <p><a href="https://gitee.com/cyf112233/tttt/releases/download/dfdfdf/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6app.apk" class="download-btn">下载多线程下载器(安卓版)</a></p>
                  <p>听着，这他妈的是免费的，花钱我吃史，你只需要长按下载按钮，复制链接，去这里面下，速度快100倍</p>
              </div>
              
              <div class="download-list">
                  <h3>📦 FCL启动器下载</h3>
          EOF
          
          # 添加文件列表
          for file in $APK_FILES; do
              filename=$(basename "$file")
              filesize=$(du -h "$file" | cut -f1)
              file_path="apk_files/$filename"
              cat >> web/index.html << EOF
                  <div class="file-item">
                      <div class="file-name">$filename</div>
                      <div>
                          <span style="color: #666; margin-right: 15px;">大小: $filesize</span>
                          <a href="$file_path" class="download-btn" download>下载APK</a>
                      </div>
                  </div>
          EOF
          done
          
          # 添加HTML尾部
          cat >> web/index.html << EOF
              </div>
              
              <div class="footer">
                  <p>自动更新于: $(date '+%Y-%m-%d %H:%M:%S')</p>
              </div>
          </body>
          </html>
          EOF
          
          # 添加web目录到git
          git add web/

      - name: Commit and push changes
        if: env.NEW_RELEASE == 'true'
        run: |
          # 提交所有更改
          git commit -m "自动更新到版本 $LATEST_TAG" || echo "No changes to commit"
          
          # 强制推送到远程仓库，覆盖历史
          git push --force origin HEAD:main || git push --force origin HEAD:master

      - name: No new release
        if: env.NEW_RELEASE == 'false'
        run: |
          echo "No new release found. Current version is up to date."
